<?php
namespace verbb\shippy\rates\royalmail\online;

use verbb\shippy\carriers\RoyalMailRates;

class InternationalTracked extends RoyalMailRates
{
    // Static Methods
    // =========================================================================

    public static function getRates(string $countryCode): array
    {
        $zone = self::getZone($countryCode);

        if ($zone === 'UK') {
            return [];
        }

        $included = ['AX', 'AD', 'AU', 'AT', 'BE', 'BR', 'CA', 'HR', 'CY', 'DK', 'EE', 'FO', 'FI', 'FR', 'DE', 'GI', 'GR', 'GL', 'HK', 'HU', 'IS', 'IN', 'IE', 'IL', 'IT', 'LV', 'LB', 'LI', 'LT', 'LU', 'MY', 'MT', 'NL', 'NZ', 'NO', 'PL', 'PT', 'RU', 'SM', 'RS', 'SG', 'SK', 'SI', 'KR', 'ES', 'SE', 'CH', 'TR', 'US', 'VA'];

        if (!in_array($countryCode, $included)) {
            return [];
        }

        $bands = [
            '2024' => [
                self::LETTER => [
                    100 => [790, 790, 790, 790, 790, 790, 790, 790, 790, 790, 790, 790, 790, 790, 790, 790, 790],
                ],
                self::LARGE_LETTER => [
                    100 => [950, 950, 950, 950, 950, 1055, 1055, 1055, 1060, 1060, 1055, 950, 950, 950, 1055, 1060, 1060],
                    250 => [980, 980, 980, 980, 980, 1125, 1125, 1125, 1245, 1245, 1125, 980, 980, 980, 1125, 1245, 1170],
                    500 => [1090, 1090, 1090, 1090, 1090, 1350, 1350, 1350, 1545, 1545, 1350, 1090, 1090, 1090, 1350, 1545, 1380],
                    750 => [1135, 1135, 1135, 1135, 1135, 1555, 1555, 1555, 1855, 1855, 1555, 1135, 1135, 1135, 1555, 1855, 1600],
                ],
                self::PACKET => [
                    100 => [865, 800, 800, 900, 900, 1375, 1120, 1120, 1235, 1235, 1120, 865, 900, 985, 1120, 1235, 1170],
                    250 => [865, 800, 800, 900, 900, 1375, 1120, 1120, 1235, 1235, 1120, 865, 900, 985, 1120, 1235, 1170],
                    500 => [865, 920, 920, 990, 990, 1375, 1420, 1420, 1585, 1585, 1420, 985, 990, 1170, 1420, 1585, 1490],
                    750 => [1010, 1010, 975, 1045, 990, 1620, 1420, 1640, 1965, 1765, 1420, 1080, 1045, 1305, 1665, 1965, 1550],
                    1000 => [1010, 1075, 995, 1110, 990, 1930, 1420, 1640, 2310, 1965, 1420, 1150, 1110, 1405, 1930, 2310, 1720],
                    1250 => [1010, 1095, 995, 1150, 1150, 2165, 2000, 2175, 2640, 2340, 2000, 1190, 1150, 1500, 2175, 2640, 2000],
                    1500 => [1010, 1095, 995, 1150, 1150, 2335, 2200, 2265, 2915, 2665, 2200, 1190, 1150, 1680, 2465, 2915, 2000],
                    2000 => [1010, 1095, 995, 1215, 1150, 2455, 2200, 2265, 3110, 3010, 2200, 1210, 1215, 1950, 2645, 3110, 2000],
                ],
                self::PRINTED_PAPERS => [
                    100 => [865, 800, 800, 900, 900, 1375, 1120, 1120, 1235, 1235, 1120, 865, 900, 985, 1120, 1235, 1170],
                    250 => [865, 800, 800, 900, 900, 1375, 1120, 1120, 1235, 1235, 1120, 865, 900, 985, 1120, 1235, 1170],
                    500 => [865, 920, 920, 990, 990, 1375, 1420, 1420, 1585, 1585, 1420, 985, 990, 1170, 1420, 1585, 1490],
                    750 => [1010, 1010, 975, 1045, 990, 1620, 1420, 1640, 1965, 1765, 1420, 1080, 1045, 1305, 1665, 1965, 1550],
                    1000 => [1010, 1075, 995, 1110, 990, 1930, 1420, 1640, 2310, 1965, 1420, 1150, 1110, 1405, 1930, 2310, 1720],
                    1250 => [1010, 1095, 995, 1150, 1150, 2165, 2000, 2175, 2640, 2340, 2000, 1190, 1150, 1500, 2175, 2640, 2000],
                    1500 => [1010, 1095, 995, 1150, 1150, 2335, 2200, 2265, 2915, 2665, 2200, 1190, 1150, 1680, 2465, 2915, 2000],
                    2000 => [1010, 1095, 995, 1215, 1150, 2455, 2200, 2265, 3110, 3010, 2200, 1210, 1215, 1950, 2645, 3110, 2000],
                ],
            ],
        ];

        return self::getInternationalBoxPricing($bands, $countryCode);
    }
}
